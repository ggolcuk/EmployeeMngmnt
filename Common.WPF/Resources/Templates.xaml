<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:converter="clr-namespace:Common.WPF.Converters"
                    
                    >


    <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converter:CreateUpdateConverter x:Key="CreateUpdateConverter" />
    <converter:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />

    <SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />
    <SolidColorBrush x:Key="brushWatermarkForeground" Color="LightSteelBlue" />
    <SolidColorBrush x:Key="brushWatermarkBorder" Color="Gray" />

    <ControlTemplate x:Key="CommonErrorTemplate">
        <DockPanel LastChildFill="True">
            <Border BorderBrush="Red" BorderThickness="1">
                <AdornedElementPlaceholder />
            </Border>
        </DockPanel>
    </ControlTemplate>


    <Style x:Key="EmptyHeaderStyle" TargetType="GridViewColumnHeader">
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>

    <Style x:Key="TextBlockStyle" TargetType="TextBlock">        
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="22"/>
    </Style>


    <Style x:Key="TextBoxValidated" TargetType="TextBox">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="22"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                    Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsVisible" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource CommonErrorTemplate}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBlockElementStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="TextBoxEditingElementStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup HorizontalAlignment="Left" PopupAnimation="Fade" Placement="Bottom" IsOpen="true">
                            <Grid Background="White">
                                <TextBlock Text="{Binding [0].ErrorContent}" />
                            </Grid>
                        </Popup>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="TextBoxSelected" TargetType="TextBox" BasedOn="{StaticResource TextBoxValidated}">
        <Style.Triggers>
            <Trigger Property="IsSelectionActive" Value="True">
                <Setter Property="Background" Value="Gray"/>
            </Trigger>
            <Trigger Property="IsSelectionActive" Value="False">
                <Setter Property="Background" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType= "{x:Type ComboBox}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Background" Value="White"/>
    </Style>


    <Style x:Key="LabelStyle" TargetType="Label">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="CheckboxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="22"/>


    </Style>

    <Style x:Key="ImageButton" TargetType="ButtonBase">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="2" />
    </Style>
  

</ResourceDictionary>